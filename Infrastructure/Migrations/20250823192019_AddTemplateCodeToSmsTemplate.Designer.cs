// <auto-generated />
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250823192019_AddTemplateCodeToSmsTemplate")]
    partial class AddTemplateCodeToSmsTemplate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.SmsConfig", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("EnableAutoFailoverLineNumber")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableAutoFailoverProvider")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SmsConfig", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnableAutoFailoverLineNumber = false,
                            EnableAutoFailoverProvider = false
                        });
                });

            modelBuilder.Entity("Core.Entities.SmsLineEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProviderEntryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDefault");

                    b.HasIndex("ProviderEntryId");

                    b.ToTable("SmsLineEntries", (string)null);
                });

            modelBuilder.Entity("Core.Entities.SmsProviderEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApiKey")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProviderType")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.HasIndex("IsDefault");

                    b.ToTable("SmsProviderEntries", (string)null);
                });

            modelBuilder.Entity("Core.Entities.SmsTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProviderEntryId")
                        .HasColumnType("int");

                    b.Property<string>("TemplateBody")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TemplateCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TemplateType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProviderEntryId");

                    b.ToTable("SmsTemplates", (string)null);
                });

            modelBuilder.Entity("Core.Entities.SmsLineEntry", b =>
                {
                    b.HasOne("Core.Entities.SmsProviderEntry", "ProviderEntry")
                        .WithMany("Lines")
                        .HasForeignKey("ProviderEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProviderEntry");
                });

            modelBuilder.Entity("Core.Entities.SmsTemplate", b =>
                {
                    b.HasOne("Core.Entities.SmsProviderEntry", "ProviderEntry")
                        .WithMany("Templates")
                        .HasForeignKey("ProviderEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProviderEntry");
                });

            modelBuilder.Entity("Core.Entities.SmsProviderEntry", b =>
                {
                    b.Navigation("Lines");

                    b.Navigation("Templates");
                });
#pragma warning restore 612, 618
        }
    }
}
